on:
  push:
    branches:
      - main
name: CI
jobs:
  lint:
    name: Lint
    runs-on: [self-hosted, small]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: python -m pip install --upgrade poetry==1.6.1

      - name: Config poetry
        run: poetry config virtualenvs.create false

      - name: Install dependencies
        run: poetry install --only main,dev --no-interaction --no-ansi --no-cache
        working-directory: ./slack_bot

      - name: Lint
        run: ruff .
        working-directory: ./slack_bot

  type_checking:
    name: Static type checking
    runs-on: [ self-hosted, small ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: python -m pip install --upgrade poetry==1.6.1

      - name: Config poetry
        run: poetry config virtualenvs.create false

      - name: Install dependencies
        run: poetry install --only main,dev --no-interaction --no-ansi --no-cache
        working-directory: ./slack_bot

      - name: Lint
        run: mypy .
        working-directory: ./slack_bot

  deploy:
    name: Deploy
    needs:
      - lint
      - type_checking
    concurrency:
      group: production
    runs-on: [self-hosted, small]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: hyperskill.azurecr.io/hyperskill
          username: ${{ secrets.AZ_REGISTRY_USERNAME }}
          password: ${{ secrets.AZ_REGISTRY_PASSWORD }}

      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: hyperskill.azurecr.io/hyperskill/dataslackbot:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha

      - name: Set up Helm
        uses: ./.github/workflows/actions/helm
        with:
          resource_group: ${{ vars.RESOURCE_GROUP }}
          cluster_name: ${{ vars.CLUSTER_NAME }}
          client_id: ${{ secrets.CLIENT_ID }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}

      - name: Deploy
        run: |
          helm upgrade data-slack-bot ./deploy/slack_bot \
          --namespace data-slack-bot \
          --install \
          --wait \
          --atomic \
          --set image.tag=${{ github.sha }} \
          --set image.dockerConfigJson=${{ secrets.DOCKER_CONFIG_JSON }} \
          --set slack.appToken=${{ secrets.SLACK_APP_TOKEN }} \
          --set slack.botToken=${{ secrets.SLACK_BOT_TOKEN }}
          --set openai.oaiToken=${{ secrets.OPENAI_API_KEY }}
